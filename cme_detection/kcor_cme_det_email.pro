;+
; Project     :	MLSO - KCOR
;
; Name        :	KCOR_CME_DET_EMAIL
;
; Purpose     :	Send out MLSO K-cor alert emails
;
; Category    :	KCOR, CME, Detection
;
; Explanation : This routine is called from KCOR_CME_DET_ALERT to send out
;               alert emails to a distribution list by spawning the unix
;               command "mail".  The spawns are performed with nohup and with
;               an ampersand at the end so that the program does not need to
;               wait for the mail message to be sent before continuing.
;
; Syntax      :	KCOR_CME_DET_EMAIL, TIME, EDGE
;
; Examples    :	See KCOR_CME_DET_ALERT
;
; Inputs      :	TIME    = Detection time in string format
;               EDGE    = Height of leading edge in Rsun units.  Ignored if
;                         /OPERATOR keyword is set.
;
; Opt. Inputs :	None
;
; Outputs     :	The movies are written to the directory specified by the
;               environment variable KCOR_CME_DETECTION.
;
; Opt. Outputs:	None
;
; Keywords    :	OPERATOR = Flags that this is an operator alert, and not all
;                          the CME parameters are available.
;
; Env. Vars.  : KCOR_MAILING_LIST = Text file containing a list of email
;                                   addresses, one per line.
;
; Calls       :	MK_TEMP_FILE, GET_TEMP_DIR, 
;
; Common      :	KCOR_CME_DETECTION defined in kcor_cme_detection.pro
;
; Restrictions:	Depending on the operating system, the Unix "mail" command may
;               or may not be able to add attachments through the "-a" switch.
;               However, attachments can also be added by using uuencode and
;               appending the text output to the temporary mail message file.
;
; Side effects:	None
;
; Prev. Hist. :	None
;
; History     :	Version 1, 22-Mar-2017, William Thompson, GSFC
;
; Contact     :	WTHOMPSON
;-
;
pro kcor_cme_det_email, time, edge, operator=operator
compile_opt strictarr
;
common kcor_cme_detection
;
;  Look for the file containing the email addresses.  If not found, then simply
;  return.
;
addressfile = getenv('KCOR_MAILING_LIST')
if not file_exist(addressfile) then return
;
;  Create a temporary file for the message.
;
mailfile = mk_temp_file(dir=get_temp_dir(), 'cme_mail.txt', /random)
;
;  Write out the message to the temporary file.  Different messages are sent
;  depending on whether the alert was automatic or generated by the operator.
;
openw, out, mailfile, /get_lun
if keyword_set(operator) then begin
    printf, out, 'The Mauna Loa K-coronagraph operator has noticed a ' + $
            'CME in progress.'
    printf, out, 'Parameters for this CME have not yet been measured.'
end else begin
    printf, out, 'The Mauna Loa K-coronagraph has detected a possible CME at ' + $
            time + ' UT with the following parameters'
    printf, out
    format = '(F10.2)'
    printf, out, 'Radial distance from Sun center: ' + ntrim(edge,format) + ' Rsun'
    printf, out, 'Position angle: ' + ntrim(angle) + ' degrees'
    printf, out, 'Initial speed: ' + ntrim(speed, format) + ' km/s'
endelse
free_lun, out
;
;  Form a subject line for the email.
;
subject = 'MLSO K-cor possible CME at ' + time + ' UT'
;
;  Step through the address file, and send a message to each listed recipient.
;
openr, in, addressfile, /get_lun
address = ''
while not eof(in) do begin
    readf, in, address
    address = strtrim(address, 2)
    if address ne '' then begin
        cmd = 'nohup mail -s "' + subject + '" ' + address + ' <' + $
              mailfile + ' &'
        spawn, cmd, result, error_result, exit_status=status
        if (status ne 0L) then begin
          print, 'problem with mail command: %s', cmd
          print, strjoin(error_result, ' ')
        endif
    endif
endwhile
free_lun, in
;
;  Delete the temporary file.
;
file_delete, mailfile
;
end
