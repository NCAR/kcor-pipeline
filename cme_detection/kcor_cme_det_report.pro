; docformat = 'rst'

;+
; Send an email report about a completed CME.
;
; :Params:
;   time : in, required, type=double
;     Atomic International Time (TAI), seconds from midnight 1 January 1958
;
; :Keywords:
;   widget : in, optional, type=boolean
;     set to run in the widget GUI
;-
pro kcor_cme_det_report, time, widget=widget
  compile_opt strictarr
  common kcor_cme_detection

  if (n_elements(speed_history) gt 0L) then begin
    ; Look for the file containing the email addresses. If not found, then
    ; simply return.
    addressfile = getenv('KCOR_MAILING_LIST')
    if (~file_exist(addressfile)) then begin
      mg_log, 'no address file specified in KCOR_MAILING_LIST, not sending email', $
              name='kcor-cme', /warn
      return
    endif

    ; create filename for plot file
    plot_file = mk_temp_file(dir=get_temp_dir(), 'plot.png', /random)

    ; create plot to attach to email
    original_device = !d.name
    set_plot, 'Z'
    loadct, 0
    device, decomposed=1, set_pixel_depth=24, set_resolution=[800, 2 * 360]

    !p.multi = [0, 1, 2]

    velocity = reform(speed_history)
    ind = where(speed_history lt 0.0, n_nan)
    if (n_nan gt 0L) then velocity[ind] = !values.f_nan

    utplot, date_diff.date_avg, velocity, $
            color='000000'x, background='ffffff'x, $
            psym=1, symsize=0.5, $
            ytitle='velocity (km/s)', $
            title='Speed', $
            yrange=[0.0, max(velocity, /nan)]

    date0 = date_diff[-1L].date_avg
    rsun = (pb0r(date0))[2]
    radius = 60 * (lat[leadingedge] + 90) / rsun

    ind = where(leadingedge lt 0.0, n_nan)
    if (n_nan gt 0L) then radius[ind] = !values.f_nan

    utplot, date_diff.date_avg, radius, $
            color='000000'x, background='ffffff'x, $
            psym=1, symsize=0.5, $
            ytitle='Solar radii', $
            title='Leading edge', $
            yrange=[1.0, 2.0]

    im = tvrd(true=1)
    set_plot, original_device
    write_png, plot_file, im

    !p.multi = 0

    ; create a temporary file for the message
    mailfile = mk_temp_file(dir=get_temp_dir(), 'cme_mail.txt', /random)

    ; Write out the message to the temporary file. Different messages are sent
    ; depending on whether the alert was automatic or generated by the operator.
    openw, out, mailfile, /get_lun

    printf, out, 'The Mauna Loa K-coronagraph has detected a possible CME ending at ' + $
            time + ' UT with the following parameters'
    printf, out

    free_lun, out

    ; form a subject line for the email
    subject = 'MLSO K-cor report for CME ending at ' + time + ' UT'

    ; step through the address file, and send a message to each listed recipient
    openr, in, addressfile, /get_lun
    address = ''
    while (~eof(in)) do begin
      readf, in, address
      address = strtrim(address, 2)
      if (address ne '') then begin
        cmd = string(subject, $
                     plot_file, $
                     address, $
                     mailfile, $
                     format='(%"nohup mail -s \"%s\" -a %s %s < %s")')
        spawn, cmd, result, error_result, exit_status=status
        if (status eq 0L) then begin
          mg_log, 'report sent to %s', address, name='kcor-cme', /info
        endif else begin
          mg_log, 'problem with mail command: %s', cmd, name='kcor-cme', /error
          mg_log, strjoin(error_result, ' '), name='kcor-cme', /error
        endelse
      endif
    endwhile
    free_lun, in

    ; delete the temporary files
    file_delete, mailfile
    file_delete, plot_file

    delvarx, speed_history
  endif
end
